{"version":3,"sources":["pages/addStudent.js","pages/display.js","App.js","serviceWorker.js","index.js"],"names":["AddStudent","React","useState","fn","setFn","ln","setLn","em","setEm","stn","setStn","city","setCity","zip","setZip","gpa","setGpa","Paper","className","TextField","id","label","variant","value","onChange","e","target","Button","color","onClick","body","addr","console","log","axios","post","then","res","data","src","alt","Display","headings","filter","setFilter","student","setStudent","InputBase","placeholder","InputLabel","Select","event","MenuItem","TableContainer","component","Table","TableHead","TableRow","map","heading","TableCell","TableBody","rows","Object","entries","get","values","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"mNA4HeA,EAvHI,WAAO,IAAD,EACLC,IAAMC,SAAS,IADV,mBAClBC,EADkB,KACdC,EADc,OAELH,IAAMC,SAAS,IAFV,mBAElBG,EAFkB,KAEdC,EAFc,OAGLL,IAAMC,SAAS,IAHV,mBAGlBK,EAHkB,KAGdC,EAHc,OAIHP,IAAMC,SAAS,IAJZ,mBAIlBO,EAJkB,KAIbC,EAJa,OAKDT,IAAMC,SAAS,IALd,mBAKlBS,EALkB,KAKZC,EALY,OAMHX,IAAMC,SAAS,IANZ,mBAMlBW,EANkB,KAMbC,EANa,OAOHb,IAAMC,SAAS,IAPZ,mBAOlBa,EAPkB,KAObC,EAPa,KAwBvB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAU,OACf,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,UACb,6BACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,MAAM,aACNC,QAAQ,WACRC,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAOrB,EAAMqB,EAAEC,OAAOH,WAGpC,yBAAKL,UAAU,aACb,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,MAAM,YACNC,QAAQ,WACRC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAMmB,EAAEC,OAAOH,YAItC,yBAAKL,UAAU,+BACb,kBAACC,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,QACNC,QAAQ,WACRC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAOjB,EAAMiB,EAAEC,OAAOH,WAGpC,yBAAKL,UAAU,qBACb,kBAACC,EAAA,EAAD,CACEC,GAAG,MACHC,MAAM,cACNC,QAAQ,WACRC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAOe,EAAEC,OAAOH,WAGrC,yBAAKL,UAAU,oBACb,6BACE,kBAACC,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,OACNC,QAAQ,WACRC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAQa,EAAEC,OAAOH,WAGtC,yBAAKL,UAAU,aACb,kBAACC,EAAA,EAAD,CACEC,GAAG,MACHC,MAAM,UACNC,QAAQ,WACRC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAOW,EAAEC,OAAOH,YAIvC,yBAAKL,UAAU,UACb,kBAACC,EAAA,EAAD,CACEC,GAAG,MACHC,MAAM,MACNC,QAAQ,WACRC,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOT,EAAOS,EAAEC,OAAOH,WAGrC,yBAAKL,UAAU,oBACb,kBAACS,EAAA,EAAD,CACEL,QAAQ,YACRM,MAAM,UACNC,QA3FO,WACnB,IAEMC,EAAO,CACX3B,GAAIA,EACJE,GAAIA,EACJE,GAAIA,EACJwB,KALStB,EADG,KACOE,EADP,KACkBE,EAM9BE,IAAKA,GAEPiB,QAAQC,IAAIH,GACZI,IAAMC,KAAK,qBAAsBL,GAChCM,MAAK,SAAAC,GAAG,OAAIL,QAAQC,IAAII,EAAIC,WA4EnB,YASJ,yBAAKpB,UAAU,YACb,yBACEqB,IAAI,qSACJC,IAAI,kBACJtB,UAAU,uB,0HCgCTuB,EAhIC,WACd,IAAMC,EAAW,CACf,aACA,aACA,YACA,QACA,UACA,OAPkB,EAoCQzC,IAAMC,SAAS,IApCvB,mBAoCbyC,EApCa,KAoCLC,EApCK,OAqCQ3C,IAAMC,SAAS,IArCvB,mBAqCf2C,EArCe,KAqCNC,EArCM,KAkDpB,OACE,yBAAK5B,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,QACb,kBAAC6B,EAAA,EAAD,CACEC,YAAY,YACZ9B,UAAU,iBAIhB,yBAAKA,UAAU,QACb,kBAAC+B,EAAA,EAAD,eACA,kBAACC,EAAA,EAAD,CAAQ3B,MAAOoB,EAAQnB,SA3BV,SAAC2B,GACpBP,EAAUO,EAAMzB,OAAOH,SA2Bf,kBAAC6B,EAAA,EAAD,CAAU7B,MAAM,IAAhB,QACA,kBAAC6B,EAAA,EAAD,CAAU7B,MAAM,MAAhB,cACA,kBAAC6B,EAAA,EAAD,CAAU7B,MAAM,MAAhB,cACA,kBAAC6B,EAAA,EAAD,CAAU7B,MAAM,MAAhB,gBAKN,kBAAC8B,EAAA,EAAD,CAAgBC,UAAWrC,KACzB,kBAACsC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWtC,UAAU,iBACnB,kBAACuC,EAAA,EAAD,KACGf,EAASgB,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,KAAYD,QAIlB,kBAACE,EAAA,EAAD,KACGhB,EAAQa,KAAI,SAAAI,GAAI,OAAI,kBAACL,EAAA,EAAD,KAChBM,OAAOC,QAAQF,GAAMJ,KAAI,mCAAOnC,GAAP,kBAAkB,kBAACqC,EAAA,EAAD,KACvCrC,UAMT,kBAACkC,EAAA,EAAD,KACGf,EAASgB,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,KAAYD,OAGhB,kBAACF,EAAA,EAAD,KACGf,EAASgB,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,KAAYD,OAGhB,kBAACF,EAAA,EAAD,KACGf,EAASgB,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,KAAYD,OAGhB,kBAACF,EAAA,EAAD,KACGf,EAASgB,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,KAAYD,OAGhB,kBAACF,EAAA,EAAD,KACGf,EAASgB,KAAI,SAACC,GAAD,OACZ,kBAACC,EAAA,EAAD,KAAYD,UAMtB,6BACE,kBAAChC,EAAA,EAAD,CAAQE,QA/EM,WAClBK,IAAM+B,IAAI,kCAAkC7B,MAAK,SAACC,GAChDS,EAAWT,EAAIC,KAAK4B,aA6ElB,WChHOC,MAvBf,WACE,OACE,yBAAKjD,UAAU,IACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,UACb,yBAAKA,UAAU,2CACf,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMkD,GAAG,OAAOlD,UAAU,cAA1B,sBAEF,6BACE,kBAAC,IAAD,CAAMkD,GAAG,UAAUlD,UAAU,cAA7B,aAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,KAAK,OAAOf,UAAWtD,IAC9B,kBAAC,IAAD,CAAOqE,KAAK,UAAUf,UAAWb,QCVvB6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAA+C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtD,QAAQsD,MAAMA,EAAMC,a","file":"static/js/main.bcfab599.chunk.js","sourcesContent":["import React from \"react\";\nimport { TextField, Button, Paper } from \"@material-ui/core\";\nimport \"../App.css\";\nimport axios from \"axios\";\n\nconst AddStudent = () => {\n  var [fn, setFn] = React.useState(\"\");\n  var [ln, setLn] = React.useState(\"\");\n  var [em, setEm] = React.useState(\"\");\n  var [stn, setStn] = React.useState(\"\");\n  var [city, setCity] = React.useState(\"\");\n  var [zip, setZip] = React.useState(\"\");\n  var [gpa, setGpa] = React.useState(\"\");\n\n  const handleSubmit = () => {\n    const space = ', '\n    var addr = stn+space+city+space+zip;\n    const body = {\n      fn: fn,\n      ln: ln,\n      em: em,\n      addr: addr,\n      gpa: gpa,\n    };\n    console.log(body);\n    axios.post(\"/db/add/newStudent\", body)\n    .then(res => console.log(res.data));\n  };\n\n  return (\n    <div>\n      <Paper className=\"m-3\">\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"d-flex flex-column justify-content-center main-margin\">\n            <div className=\"d-flex\">\n              <div>\n                <TextField\n                  id=\"fn\"\n                  label=\"First Name\"\n                  variant=\"outlined\"\n                  value={fn}\n                  onChange={(e) => setFn(e.target.value)}\n                ></TextField>\n              </div>\n              <div className=\"pl-3 ml-3\">\n                <TextField\n                  id=\"ln\"\n                  label=\"Last Name\"\n                  variant=\"outlined\"\n                  value={ln}\n                  onChange={(e) => setLn(e.target.value)}\n                ></TextField>\n              </div>\n            </div>\n            <div className=\"d-flex mt-3 mb-3 width-text\">\n              <TextField\n                id=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                value={em}\n                onChange={(e) => setEm(e.target.value)}\n              ></TextField>\n            </div>\n            <div className=\"d-flex width-text\">\n              <TextField\n                id=\"stn\"\n                label=\"Street Name\"\n                variant=\"outlined\"\n                value={stn}\n                onChange={(e) => setStn(e.target.value)}\n              ></TextField>\n            </div>\n            <div className=\"d-flex mt-3 mb-3\">\n              <div>\n                <TextField\n                  id=\"city\"\n                  label=\"City\"\n                  variant=\"outlined\"\n                  value={city}\n                  onChange={(e) => setCity(e.target.value)}\n                ></TextField>\n              </div>\n              <div className=\"pl-3 ml-3\">\n                <TextField\n                  id=\"zip\"\n                  label=\"Zipcode\"\n                  variant=\"outlined\"\n                  value={zip}\n                  onChange={(e) => setZip(e.target.value)}\n                ></TextField>\n              </div>\n            </div>\n            <div className=\"d-flex\">\n              <TextField\n                id=\"gpa\"\n                label=\"GPA\"\n                variant=\"outlined\"\n                value={gpa}\n                onChange={(e) => setGpa(e.target.value)}\n              ></TextField>\n            </div>\n            <div className=\"d-flex mt-3 mb-3\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleSubmit}\n              >\n                Submit\n              </Button>\n            </div>\n          </div>\n          <div className=\"m-3 pr-3\">\n            <img\n              src=\"https://images.squarespace-cdn.com/content/v1/55b21c72e4b09b5e3592ea96/1570538839979-GSBKFM9404FHTHY7NXEY/ke17ZwdGBToddI8pDm48kD2iWRQi3s1qWCCeE77O81dZw-zPPgdn4jUwVcJE1ZvWEtT5uBSRWt4vQZAgTJucoTqqXjS3CfNDSuuf31e0tVE8uJ9rtqqzGvu8dya8varXRTyv_6gBU9_CP-35hVxG6mQ6l2WM7tn7mqHTODzkmeM/SDB-icon.png\"\n              alt=\"Image Not Found\"\n              className=\"img-thumbnail\"\n            />\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default AddStudent;\n","import React from \"react\";\nimport \"../App.css\";\nimport {\n  Table,\n  TableContainer,\n  Paper,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  InputBase,\n  Select,\n  MenuItem,\n  InputLabel,\n  Button,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport axios from \"axios\";\n\nconst Display = () => {\n  const headings = [\n    \"Student ID\",\n    \"First Name\",\n    \"Last Name\",\n    \"Email\",\n    \"Address\",\n    \"GPA\",\n  ];\n  \n  const y = [\n    {\n        id: 123,\n        fn: 'asd',\n        ln: 'asc',\n        em: 'ad',\n        ad: 'ad',\n        gp: 'asd'\n    },\n    {\n        id: 123,\n        fn: 'asd',\n        ln: 'asc',\n        em: 'ad',\n        ad: 'ad',\n        gp: 'asd'\n    },\n    {\n        id: 123,\n        fn: 'asd',\n        ln: 'asc',\n        em: 'ad',\n        ad: 'adzsdfagadf agsdfbvadv agadfgva sGVSDFV',\n        gp: 'asd'\n    }\n  ]\n  const [filter, setFilter] = React.useState(\"\");\n  var [student, setStudent] = React.useState([]);\n\n  const filterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const allStudents = () => {\n    axios.get(\"/db/search/results/allStudents\").then((res) => {\n      setStudent(res.data.values);\n      //   console.log(res.data)\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"d-flex\">\n        <div className=\"d-flex search-bar w-25 m-2\">\n          <div className=\"m-1\">\n            <SearchIcon />\n          </div>\n          <div className=\"pl-2\">\n            <InputBase\n              placeholder=\"Search...\"\n              className=\"text-white\"\n            ></InputBase>\n          </div>\n        </div>\n        <div className=\"pl-4\">\n          <InputLabel>Filter</InputLabel>\n          <Select value={filter} onChange={filterChange}>\n            <MenuItem value=\"\">None</MenuItem>\n            <MenuItem value=\"id\">Student ID</MenuItem>\n            <MenuItem value=\"fn\">First Name</MenuItem>\n            <MenuItem value=\"ln\">Last Name</MenuItem>\n          </Select>\n        </div>\n      </div>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead className=\"table-heading\">\n            <TableRow>\n              {headings.map((heading) => (\n                <TableCell>{heading}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {student.map(rows => <TableRow>\n                {Object.entries(rows).map(([key, value]) => <TableCell>\n                    {value}\n                </TableCell>)}\n            </TableRow>)}\n\n\n\n            <TableRow>\n              {headings.map((heading) => (\n                <TableCell>{heading}</TableCell>\n              ))}\n            </TableRow>\n            <TableRow>\n              {headings.map((heading) => (\n                <TableCell>{heading}</TableCell>\n              ))}\n            </TableRow>\n            <TableRow>\n              {headings.map((heading) => (\n                <TableCell>{heading}</TableCell>\n              ))}\n            </TableRow>\n            <TableRow>\n              {headings.map((heading) => (\n                <TableCell>{heading}</TableCell>\n              ))}\n            </TableRow>\n            <TableRow>\n              {headings.map((heading) => (\n                <TableCell>{heading}</TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div>\n        <Button onClick={allStudents}>Load</Button>\n        {/* {console.log(student)} */}\n      </div>\n    </div>\n  );\n};\nexport default Display;\n","import React from \"react\";\nimport \"./App.css\";\nimport AddStudent from \"./pages/addStudent\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Display from \"./pages/display\";\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <Router>\n        <div className='header'>\n          <div className='d-flex justify-content-around w-50 pt-2'>\n          <div className='pr-4'>\n            <Link to=\"/add\" className='text-white'>Add a new Student</Link>\n          </div>\n          <div>\n            <Link to=\"/search\" className='text-white'>Search</Link>\n          </div>\n          </div>\n        </div>\n        <Switch>\n          <Route path=\"/add\" component={AddStudent} />\n          <Route path=\"/search\" component={Display} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}